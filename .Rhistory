libPaths()
.libPaths()
Sys.getenv("R_LIB_USER")
Sys.getenv("R_LIBS_USER")
?Sys.setenv()
Sys.getenv("R_ENVIRON")
.libPaths()
Sys.getenv("R_LIBS_USER")
.libPaths()
.libPaths()
.libPaths()
?.libPaths
.Library.site
.Library
.libPaths("C:/Users/caioc/AppData/Local/R/win-library/Nova pasta")
.libPaths()
.libPaths()
.libPaths()
.Library.site
.Library
Sys.getenv('R_LIBS')
Sys.getenv('R_LIBS_USER')
.libPaths()
.libPaths()
Sys.getenv("R_LIBS_USER")
.libPaths()
Sys.getenv()
.libPaths()
mtcars
LETTERS
length(mtcars[,1])
length(mtcars[,1])/8
?floor
floor(13/8)
13/8
LETTERS[floor(length(mtcars[,1])/8)]
floor(length(mtcars[,1])/8)
LETTERS[1:floor(length(mtcars[,1])/8)]
seq(1, 2000)
seq(1, 2000)[1:floor(length(mtcars[,1])/8)]
coluna8 <- seq(1, 2000)[1:floor(length(mtcars[,1])/8)]
coluna_indice <- seq(1, 2000)[1:floor(length(mtcars[,1])/8)]
rep(coluna_indice, each = 8)
mtcars$indice <- rep(coluna_indice, each = 8)
mtcars
tapply(mtcars, INDEX = indice, FUN = mean, na.rm = T)
mtcars
tapply(mtcars, INDEX = indice, FUN = mean, na.rm = T)
tapply(mtcars, INDEX = mtcars$indice, FUN = mean, na.rm = T)
tapply(mtcars$mpg, INDEX = mtcars$indice, FUN = mean, na.rm = T)
length(mtcars[,1])
coluna_indice <- seq(1, 2000)[1:floor(length(mtcars[,1])/8)]
coluna_indice
rep(coluna_indice, each = 8)
mtcars$indice <- rep(coluna_indice, each = 8)
mtcars$indice
mtcars
tapply(mtcars$mpg, INDEX = mtcars$indice, FUN = mean, na.rm = T)
23/8
rep(1:3, each = c(8, 8, 7))
rep(1:3, c(8, 8, 7))
.libPaths()
.libPaths()
.libPaths()
.libPaths()
library(dplyr)
gapminder
pacman::p_load(gapminder, dplyr)
pacman::p_load(gapminder, dplyr)
data <- gapminder %>%
filter(year == 2007) %>%
select(-year)
data
pacman::p_load(gapminder, dplyr, ggplot2)
ggplot(data, aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point()
ggplot(data, aes(x = gdpPercap, y = lifeExp)) +
geom_point()
ggplot(data, aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point(alpha=0.7)
options(scipen = 10)
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point(alpha = 0.5) +
scale_size(range = c(.1, 24), name = "Population (M)")
data %>%
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop)) +
geom_point(alpha = 0.5) +
scale_size(range = c(.1, 24), name = "Population (M)")
pacman::p_load(tidyverse, rcolorbrewer)
pacman::p_load(tidyverse, RColorBrewer)
ggplot(data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_brewer(palette = "Set1") +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
pacman::p_load(tidyverse, RColorBrewer, hrbrthemes)
ggplot(data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_brewer(palette = "Set1") +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
display.brewer.all()
ggplot(data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_brewer(palette = "Spectral") +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
ggplot(data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_brewer(palette = "PRGn") +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
ggplot(data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_brewer(palette = "YlOrRd") +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
ggplot(data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_brewer(palette = "YlOrRd", direction = -1) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
ggplot(data, aes(x=gdpPercap, y=lifeExp, size=pop, fill=continent)) +
geom_point(alpha=0.5, shape=21, color="black") +
scale_size(range = c(.1, 24), name="Population (M)") +
scale_fill_brewer(palette = "Accent", direction = -1) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("Life Expectancy") +
xlab("Gdp per Capita") +
theme(legend.position = "none")
pacman::p_load(virids)
pacman::p_load(viridis, ggrepel)
tmp <- data %>%
mutate(
annotation = case_when(
gdpPercap > 5000 & lifeExp < 60 ~ "yes",
lifeExp < 30 ~ "yes",
gdpPercap > 40000 ~ "yes")) %>%
mutate(pop=pop/1000000) %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country))
tmp
tmp <- data %>%
mutate(
annotation = case_when(
gdpPercap > 5000 & lifeExp < 60 ~ "yes",
lifeExp < 30 ~ "yes",
gdpPercap > 40000 ~ "yes")) %>%
mutate(pop=pop/1000000)
tmp
ggplot(tmp, aes(x=gdpPercap, y=lifeExp, size = pop, color = continent)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE) +
theme_ipsum() +
theme(legend.position="none") +
geom_text_repel(data=tmp %>% filter(annotation=="yes"), aes(label=country), size=4 ) #ggrepel
install.packages("beamer")
install.packages('tinytex')
tinytex::install_tinytex()
install.packages('pdftools')
getwd()
getwd()
# install.packages('tinytex')
tinytex::install_tinytex()
install.packages("xaringan")
remotes::install_github('yihui/xaringan', upgrade = TRUE)
options(htmltools.dir.version = FALSE)
xaringan::inf_mr()
options(htmltools.dir.version = FALSE, servr.interval = 0.5)
xaringan::inf_mr()
options(htmltools.dir.version = FALSE, servr.interval = 0.5)
xaringan::inf_mr()
install.packages("xaringanthemer")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
options(htmltools.dir.version = FALSE, servr.interval = 0.5)
options(htmltools.dir.version = FALSE, servr.interval = 0.5) # tempo de atualização do previewer # xaringan::inf_mr())
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
# install.packages("xaringanthemer")
xaringan::inf_mr()
options(htmltools.dir.version = FALSE, servr.interval = 0.5) # tempo de atualização do previewer # xaringan::inf_mr())
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
# install.packages("xaringanthemer")
xaringan::inf_mr()
getwd()
options(htmltools.dir.version = FALSE, servr.interval = 0.5) # tempo de atualização do previewer # xaringan::inf_mr())
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
xaringan::inf_mr()
xaringan::inf_mr()
install.packages("pacman")
# importando os dados
caminho_dados <- "D:/R Zone/_Cuso R/ex_1_p_guajava.xlsx"
dados_guajava <- read.xlsx(caminho_dados, sheet = 1, na.strings = "NA") %>%
as_tibble()
xaringan::inf_mr()
install.packages("C:/Users/caioc/Downloads/A3_1.0.0.tar.gz",
repos = NULL,
type = "win.binary",
lib="C:/Users/caioc/AppData/Local/R/win-library/4.2")
?install.packages
install.packages("C:/Users/caioc/Downloads/A3_1.0.0.tar.gz",
repos = NULL,
type='source',
lib="C:/Users/caioc/AppData/Local/R/win-library/4.2")
xaringan::inf_mr()
verdadeiro <- TRUE
verdadeiro
if (!requireNamespace("xaringan"))
if (!requireNamespace("xaringan"))
if (!requireNamespace("xaringan"))
if (!requireNamespace("xaringan")) remotes::install_github("yihui/xaringan")
if (!requireNamespace("remotes")) install.packages("remotes")
if (!requireNamespace("xaringanthemer")) remotes::install_github("gadenbuie/xaringanthemer")
if (!requireNamespace("xaringan")) remotes::install_github("yihui/xaringan")
xaringan::inf_mr() # real time previewer
xaringan::inf_mr() # real time previewer
if (!requireNamespace("knitr")) install.packages("knitr")
library(knitr)
kable(x)
xaringan::inf_mr() # real time previewer
kable(x)
x <- read.table(file = "D:/R Zone/_Cuso R/Apoio/ex_NA_tab_coma.txt",
header = T,
sep = "\t",
dec = ",",
na.strings = c("NA", "-9", ".", ""))
kable(x)
xaringan::inf_mr() # real time previewer
xaringan::inf_mr() # real time previewer
(
x <- read.xlsx("https://github.com/CAIOAGRO0/Introducao-ao-R/blob/main/ex.xlsx?raw=true",
na.strings = c("-9", ".", "NA", ""))
)
?round()
?|>
mtcars
x <- mtcars
y <- subset(x, x$carb == 1)
y$z <- y$carb + y$cyl
head(y, n = 10)
x <- mtcars
y <- subset(x, x$carb == 1 & x$gear <= 3)
y$z <- y$carb + y$cyl
head(y, n = 10)
x <- mtcars
y <- subset(x, x$carb == 1 & x$gear <= 3)
y$z <- y$carb + y$cyl
head(y, n = 10)
x <- mtcars
y <- subset(x, x$carb == 1 & x$gear <= 3)
y$z <- y$carb + y$cyl
y$mpg <- NULL
y$disp <- NULL
y$drat <- NULL
y$wt <- NULL
head(y, n = 10)
x <- mtcars
y <- subset(x, x$carb == 1 & x$gear <= 3)
y$z <- y$carb + y$cyl
y$mpg <- NULL
y$disp <- NULL
y$drat <- NULL
y$wt <- NULL
y$qsec <- NULL
y$vs <- NULL
y$am <- NULL
head(y, n = 10)
mtcars %>%
filter(carb == 1 & gear <= 3) %>%
transform(z = carb + cyl) %>%
select(cyl, hp, gear, carb, z) %>%
head(10)
mtcars
mtcars %>%
lm(hp ~ cyl + mpg)
mtcars %>%
lm(hp ~ cyl + mpg, .)
mtcars |>
plot(hp, mpg)
mtcars  %>%
plot(hp, mpg)
mtcars %$%
plot(hp, mpg)
xaringan::inf_mr() # real time previewer
xaringan::inf_mr() # real time previewer
xaringan::inf_mr() # real time previewer
xaringan::inf_mr() # real time previewer
mtcars %>%
head
mtcars %>% (\(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
})()
mtcars |> (\(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
})()
as.vector(mtcars)
mtcars %>%
select(mpg) %>%
\(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
}
mtcars %>%
select(mpg)
as.vector(mtcars$mpg)
mtcars %>%
select(mpg) %>% \(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
}
mtcars %>%
select(mpg) %>% (\(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
})
table(as.vector(mtcars$mpg))
mtcars
mtcars %>%
select(cyl) %>% (\(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
})
mtcars %>%
select(cyl) %>% (\(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
})
# salvando a função num objeto
estatmoda <- function(x) {
z <- table(as.vector(x))
names(z)[z == max(z)]
}
mtcars %>%
summarise(moda_am = estatmoda(cyl))
mtcars %>%
summarise(moda_carb = estatmoda(carb))
mtcars %$%
table(carb)
mtcars %$%
table(carb)
mtcars %>%
summarise_all(list(estatmoda))
mtcars %>%
summarise_all(list(min))
mtcars %>%
summarise_all(list(mean))
mtcars
mtcars %>%
summarise(moda_am = estatmoda(disp))
mtcars %>%
summarise(estatmoda(disp))
mtcars %>%
summarise(estatmoda(mpg))
mtcars
mtcars %>%
summarise(moda_cyl = estatmoda(cyl))
estatmoda
methods(estatmoda)
getAnywhere(estatmoda.default)
getAnywhere(estatmoda)
methods(mean)
getAnywhere(mean)
getAnywhere(mean.default)
mean
media <- mean
media
rm(media())
rm(media
)
# install.packages("devtools")
devtools::install_github("gadenbuie/tweetrmd")
tweetrmd::tweet_screenshot(tweet_url("https://twitter.com/drob/status/928447584712253440"))
library(tweetrmd)
xaringan::inf_mr() # real time previewer
devtools::install_github("rstudio/webshot2")
xaringan::inf_mr() # real time previewer
xaringan::inf_mr() # real time previewer
